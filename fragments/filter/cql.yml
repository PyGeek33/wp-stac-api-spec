---
openapi: 3.0.3
info:
  title: Schema of Common Query Language (CQL)
  description: 'For use in OpenAPI 3.0 documents'
  version: '1.0.0-draft.1'
paths: {}
components:
  schemas:
    booleanValueExpression:
      type: object
      oneOf:
      - "$ref": "#/components/schemas/andExpression"
      - "$ref": "#/components/schemas/orExpression"
      - "$ref": "#/components/schemas/notExpression"
      - "$ref": "#/components/schemas/comparisonPredicate"
      - "$ref": "#/components/schemas/spatialPredicate"
      - "$ref": "#/components/schemas/temporalPredicate"
    andExpression:
      type: object
      required:
      - and
      properties:
        and:
          type: array
          minItems: 2
          items:
            "$ref": "#/components/schemas/booleanValueExpression"
    orExpression:
      type: object
      required:
      - or
      properties:
        or:
          type: array
          minItems: 2
          items:
            "$ref": "#/components/schemas/booleanValueExpression"
    notExpression:
      type: object
      required:
      - not
      properties:
        not:
          type: array
          minItems: 1
          maxItems: 1
          items:
            "$ref": "#/components/schemas/booleanValueExpression"
    comparisonPredicate:
      oneOf:
      - "$ref": "#/components/schemas/binaryComparisonPredicate"
      - "$ref": "#/components/schemas/isLikePredicate"
      - "$ref": "#/components/schemas/isBetweenPredicate"
      - "$ref": "#/components/schemas/isInListPredicate"
      - "$ref": "#/components/schemas/isNullPredicate"
    binaryComparisonPredicate:
      oneOf:
      - "$ref": "#/components/schemas/eqExpression"
      - "$ref": "#/components/schemas/ltExpression"
      - "$ref": "#/components/schemas/gtExpression"
      - "$ref": "#/components/schemas/lteExpression"
      - "$ref": "#/components/schemas/gteExpression"
    eqExpression:
      type: object
      required:
      - eq
      properties:
        eq:
          "$ref": "#/components/schemas/scalarOperands"
    ltExpression:
      type: object
      required:
      - lt
      properties:
        lt:
          "$ref": "#/components/schemas/scalarOperands"
    gtExpression:
      type: object
      required:
      - gt
      properties:
        gt:
          "$ref": "#/components/schemas/scalarOperands"
    lteExpression:
      type: object
      required:
      - lte
      properties:
        lte:
          "$ref": "#/components/schemas/scalarOperands"
    gteExpression:
      type: object
      required:
      - gte
      properties:
        gte:
          "$ref": "#/components/schemas/scalarOperands"
    isBetweenPredicate:
      type: object
      required:
      - between
      properties:
        between:
          type: object
          required:
          - value
          - lower
          - upper
          properties:
            value:
              "$ref": "#/components/schemas/valueExpression"
            lower:
              "$ref": "#/components/schemas/scalarExpression"
            upper:
              "$ref": "#/components/schemas/scalarExpression"
    isLikePredicate:
      type: object
      required:
      - like
      properties:
        like:
          "$ref": "#/components/schemas/scalarOperands"
        wildcard:
           type: string
           default: "%"
        singleChar:
           type: string
           default: "."
        escapeChar:
           type: string
           default: "\\"
        nocase:
          type: boolean
          default: true
    isInListPredicate:
      type: object
      required:
      - in
      properties:
        in:
          type: object
          required:
          - value
          - list
          properties:
            value:
              "$ref": "#/components/schemas/valueExpression"
            list:
              type: array
              items:
                "$ref": "#/components/schemas/valueExpression"
            nocase:
              type: boolean
              default: true
    valueExpression:
      oneOf:
      - "$ref": "#/components/schemas/scalarExpression"
      - "$ref": "#/components/schemas/spatialLiteral"
      - "$ref": "#/components/schemas/typedTemporalLiteral"
    scalarOperands:
      type: array
      minItems: 2
      maxItems: 2
      items:
        "$ref": "#/components/schemas/scalarExpression"
    scalarExpression:
      oneOf:
      - "$ref": "#/components/schemas/scalarLiteral"
      - "$ref": "#/components/schemas/propertyRef"
    isNullPredicate:
      type: object
      required:
      - isNull
      properties:
        isNull:
          "$ref": "#/components/schemas/scalarExpression"
    spatialPredicate:
      oneOf:
      - "$ref": "#/components/schemas/intersectsExpression"
    intersectsExpression:
      type: object
      required:
      - intersects
      properties:
        intersects:
          "$ref": "#/components/schemas/spatialOperands"
    spatialOperands:
      type: array
      minItems: 2
      maxItems: 2
      items:
        "$ref": "#/components/schemas/geomExpression"
    geomExpression:
      oneOf:
      - "$ref": "#/components/schemas/spatialLiteral"
      - "$ref": "#/components/schemas/propertyRef"
    temporalPredicate:
      oneOf:
      - "$ref": "#/components/schemas/anyinteractsExpression"
    anyinteractsExpression:
      type: object
      required:
      - anyinteracts
      properties:
        anyinteracts:
          "$ref": "#/components/schemas/temporalOperands"
    temporalOperands:
      type: array
      minItems: 2
      maxItems: 2
      items:
        "$ref": "#/components/schemas/temporalExpression"
    temporalExpression:
      oneOf:
      - "$ref": "#/components/schemas/temporalLiteral"
      - "$ref": "#/components/schemas/propertyRef"
    propertyRef:
      type: object
      required:
      - property
      properties:
        propertyName:
          type: string
    scalarLiteral:
      oneOf:
      - type: string
      - type: number
      - type: boolean
    spatialLiteral:
      oneOf:
      - "$ref": "#/components/schemas/geometryLiteral"
      - "$ref": "#/components/schemas/envelopeLiteral"
    geometryLiteral:
      oneOf:
      - "$ref": "#/components/schemas/point"
      - "$ref": "#/components/schemas/linestring"
      - "$ref": "#/components/schemas/polygon"
      - "$ref": "#/components/schemas/multipoint"
      - "$ref": "#/components/schemas/multilinestring"
      - "$ref": "#/components/schemas/multipolygon"
    geojson-bbox:
       type: array
       minItems: 4
       maxItems: 4
       items:
          type: number
    point:
      title: GeoJSON Point
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - Point
        coordinates:
          type: array
          minItems: 2
          items:
            type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    linestring:
      title: GeoJSON LineString
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            type: array
            minItems: 2
            items:
              type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    polygon:
      title: GeoJSON Polygon
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    multipoint:
      title: GeoJSON MultiPoint
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    multilinestring:
      title: GeoJSON MultiLineString
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    multipolygon:
      title: GeoJSON MultiPolygon
      type: object
      required:
      - type
      - coordinates
      properties:
        type:
          type: string
          enum:
          - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                type: array
                minItems: 2
                items:
                  type: number
        bbox:
          "$ref": "#/components/schemas/geojson-bbox"
    envelopeLiteral:
      type: object
      required:
      - bbox
      properties:
        bbox:
          "$ref": "#/components/schemas/bbox"
    bbox:
      type: array
      oneOf:
      - minItems: 4
        maxItems: 4
      - minItems: 6
        maxItems: 6
      items:
        type: number
    temporalLiteral:
      oneOf:
      - "$ref": "#/components/schemas/timeString"
      - "$ref": "#/components/schemas/periodString"
    timeString:
      oneOf:
      - type: string
        format: date
      - type: string
        format: date-time
    periodString:
      type: array
      minItems: 2
      maxItems: 2
      items:
         oneOf:
         - type: string
           format: date
         - type: string
           format: date-time
         - type: string
           enum:
           - ..
    typedTemporalLiteral:
      oneOf:
      - "$ref": "#/components/schemas/typedTimeString"
      - "$ref": "#/components/schemas/typedPeriodString"
    typedTimeString:
      type: object
      required:
      - datetime
      properties:
        datetime:
          "$ref": "#/components/schemas/timeString"
    typedPeriodString:
      type: object
      required:
      - datetime
      properties:
        datetime:
          "$ref": "#/components/schemas/periodString"
